 <UserControl x:Class="ToDue2.CustomDatePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ToDue2"
			xmlns:converters="clr-namespace:ToDue2.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
			 Name="Control"
			  Loaded="Control_Loaded">
	<UserControl.Resources>
		<converters:DateConverter x:Key="DateConverter"/>
		<converters:ColorConverter x:Key="ColorConverter"/>
	</UserControl.Resources>
    <Grid>
		<Button x:Name="Display" Background="{StaticResource TransparentBackground}">
			<Button.Style>
				<Style TargetType="Button">
					<Style.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="Button">
									<Border 
										Background="{StaticResource TransparentBackground}"
										BorderBrush="Transparent">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style.Setters>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.Setters>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Border 
												Background="{DynamicResource HighlightBackground}"
												BorderBrush="Transparent">
												<ContentPresenter 
													HorizontalAlignment="Center" 
													VerticalAlignment="Center">
												</ContentPresenter>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger.Setters>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.Setters>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Border 
												Background="{DynamicResource PressedBackground}"
												BorderBrush="Transparent">
												<ContentPresenter 
													HorizontalAlignment="Center" 
													VerticalAlignment="Center">
												</ContentPresenter>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger.Setters>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
			<TextBlock 
				Text="{Binding ElementName=Control, Path=SelectedDate, Mode=OneWay, Converter={StaticResource DateConverter}}"
				FontSize="20"
				FontFamily="Segoe UI Semibold"
				Foreground="{Binding ElementName=Control, Path=SelectedDate, Mode=OneWay, Converter={StaticResource ColorConverter}}"
				Background="{StaticResource TransparentBackground}"
				HorizontalAlignment="Right"
				VerticalAlignment="Stretch"
				TextAlignment="Right"/>
		</Button>
		<Popup
			x:Name="Container"
			Placement="Bottom" 
			StaysOpen="False"
			PopupAnimation="Fade"
			VerticalAlignment="Bottom"
			HorizontalAlignment="Center"
			PlacementTarget="{Binding ElementName=Display}">
			<Border BorderBrush="{DynamicResource Foreground}" BorderThickness="1" Background="White">
				<Grid Height="250">
					<Viewbox Width="250" Height="230" HorizontalAlignment="Center" VerticalAlignment="Top">
						<Calendar 
						x:Name="Picker"
						VerticalAlignment="Top" 
						SelectedDate="{Binding ElementName=Control, Path=SelectedDate, Mode=TwoWay}"
						BorderThickness="0"/>
					</Viewbox>
					<TextBlock 
						Text="Or" 
						FontSize="16" 
						Margin="30,210,0,10" 
						HorizontalAlignment="Left" 
						Width="Auto" 
						Height="Auto" 
						VerticalAlignment="Top"/>
					<ToggleButton
						Name="IndefiniteToggle"
						Visibility="Visible" 
						VerticalAlignment="Bottom"
						Checked="IndefiniteToggle_Checked"
						Unchecked="IndefiniteToggle_Unchecked" Height="30" Margin="60,10,16,12" Content="No Due Date" FontSize="16">
						<ToggleButton.Style>
							<Style TargetType="ToggleButton">
								<Style.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ToggleButton">
													<Border 
														Background="{StaticResource InfoHighlight}"
														BorderBrush="{x:Null}">
														<ContentPresenter 
															HorizontalAlignment="Center" 
															VerticalAlignment="Center">
														</ContentPresenter>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Setter Property="Foreground" Value="White"/>
									</Trigger>
									<Trigger Property="IsChecked" Value="False">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ToggleButton">
													<Border 
														Background="WhiteSmoke"
														BorderBrush="{x:Null}">
														<ContentPresenter 
															HorizontalAlignment="Center" 
															VerticalAlignment="Center">
														</ContentPresenter>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Setter Property="Foreground" Value="Black"/>
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ToggleButton">
													<Border 
														Background="PowderBlue"
														BorderBrush="{x:Null}">
														<ContentPresenter 
															HorizontalAlignment="Center" 
															VerticalAlignment="Center">
														</ContentPresenter>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Setter Property="Foreground" Value="Black"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</ToggleButton.Style>
					</ToggleButton>
				</Grid>
			</Border>
		</Popup>
	</Grid>
</UserControl>
